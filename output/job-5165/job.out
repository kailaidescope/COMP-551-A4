Starting BERT epoch experiments script
Train method: head+1
Learning rate: 0.001 
Num epochs: 8 
Batch size: 32 
Weight decay: 1 
Warmup steps: 500
Loading model
Device: cuda
Name: bert.embeddings.word_embeddings.weight  - Size: torch.Size([30522, 768])  - Requires grad: False
Name: bert.embeddings.position_embeddings.weight  - Size: torch.Size([512, 768])  - Requires grad: False
Name: bert.embeddings.token_type_embeddings.weight  - Size: torch.Size([2, 768])  - Requires grad: False
Name: bert.embeddings.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.embeddings.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.0.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.0.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.0.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.0.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.1.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.1.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.1.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.1.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.2.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.2.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.2.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.2.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.3.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.3.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.3.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.3.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.4.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.4.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.4.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.4.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.5.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.5.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.5.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.5.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.6.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.6.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.6.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.6.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.7.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.7.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.7.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.7.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.8.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.8.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.8.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.8.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.9.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.9.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.9.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.9.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: False
Name: bert.encoder.layer.10.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: False
Name: bert.encoder.layer.10.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: False
Name: bert.encoder.layer.10.output.dense.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.10.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: False
Name: bert.encoder.layer.11.attention.self.query.weight  - Size: torch.Size([768, 768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.self.query.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.self.key.weight  - Size: torch.Size([768, 768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.self.key.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.self.value.weight  - Size: torch.Size([768, 768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.self.value.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.output.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.output.dense.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.attention.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.intermediate.dense.weight  - Size: torch.Size([3072, 768])  - Requires grad: True
Name: bert.encoder.layer.11.intermediate.dense.bias  - Size: torch.Size([3072])  - Requires grad: True
Name: bert.encoder.layer.11.output.dense.weight  - Size: torch.Size([768, 3072])  - Requires grad: True
Name: bert.encoder.layer.11.output.dense.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.output.LayerNorm.weight  - Size: torch.Size([768])  - Requires grad: True
Name: bert.encoder.layer.11.output.LayerNorm.bias  - Size: torch.Size([768])  - Requires grad: True
Name: bert.pooler.dense.weight  - Size: torch.Size([768, 768])  - Requires grad: True
Name: bert.pooler.dense.bias  - Size: torch.Size([768])  - Requires grad: True
Name: classifier.weight  - Size: torch.Size([28, 768])  - Requires grad: True
Name: classifier.bias  - Size: torch.Size([28])  - Requires grad: True
Fine-tuning the model on the GoEmotions dataset...
Filtered dataset:
 DatasetDict({
    train: Dataset({
        features: ['text', 'labels', 'id'],
        num_rows: 36308
    })
    validation: Dataset({
        features: ['text', 'labels', 'id'],
        num_rows: 4548
    })
    test: Dataset({
        features: ['text', 'labels', 'id'],
        num_rows: 4590
    })
})
{'loss': 1.7923, 'grad_norm': 4.834359645843506, 'learning_rate': 0.000925990675990676, 'epoch': 1.0}
{'eval_loss': 1.5432448387145996, 'eval_accuracy': 0.5400175901495162, 'eval_f1': 0.3331122901711643, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.65      0.75      0.70       326\n     amusement       0.55      0.83      0.66       208\n         anger       0.39      0.06      0.11       109\n     annoyance       0.19      0.38      0.25       164\n      approval       0.58      0.17      0.27       258\n        caring       0.39      0.35      0.37        96\n     confusion       0.21      0.43      0.29       102\n     curiosity       0.41      0.35      0.38       164\n        desire       0.89      0.33      0.48        52\ndisappointment       0.00      0.00      0.00        91\n   disapproval       0.34      0.39      0.36       212\n       disgust       0.44      0.13      0.20        61\n embarrassment       0.50      0.30      0.38        20\n    excitement       0.60      0.12      0.19        52\n          fear       0.71      0.09      0.15        58\n     gratitude       0.90      0.91      0.90       261\n         grief       0.00      0.00      0.00         6\n           joy       0.54      0.42      0.47       106\n          love       0.69      0.84      0.76       173\n   nervousness       0.00      0.00      0.00         8\n      optimism       0.79      0.19      0.31       119\n         pride       0.00      0.00      0.00         9\n   realization       1.00      0.01      0.03        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.51      0.88      0.64        40\n       sadness       0.32      0.56      0.41        84\n      surprise       0.42      0.35      0.38        95\n       neutral       0.61      0.69      0.65      1592\n\n      accuracy                           0.54      4548\n     macro avg       0.45      0.34      0.33      4548\n  weighted avg       0.56      0.54      0.51      4548\n', 'eval_runtime': 2.9668, 'eval_samples_per_second': 1532.95, 'eval_steps_per_second': 48.2, 'epoch': 1.0}
{'loss': 1.5431, 'grad_norm': 3.9869306087493896, 'learning_rate': 0.0007937062937062938, 'epoch': 2.0}
{'eval_loss': 1.452179193496704, 'eval_accuracy': 0.5756376429199648, 'eval_f1': 0.3937754878874506, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.72      0.67      0.70       326\n     amusement       0.74      0.81      0.77       208\n         anger       0.40      0.48      0.44       109\n     annoyance       0.38      0.12      0.19       164\n      approval       0.51      0.16      0.24       258\n        caring       0.00      0.00      0.00        96\n     confusion       0.39      0.25      0.30       102\n     curiosity       0.47      0.55      0.51       164\n        desire       0.84      0.40      0.55        52\ndisappointment       0.17      0.08      0.11        91\n   disapproval       0.31      0.49      0.38       212\n       disgust       0.41      0.43      0.42        61\n embarrassment       0.67      0.30      0.41        20\n    excitement       0.83      0.10      0.17        52\n          fear       0.68      0.48      0.57        58\n     gratitude       0.98      0.86      0.92       261\n         grief       0.00      0.00      0.00         6\n           joy       0.49      0.58      0.53       106\n          love       0.69      0.87      0.77       173\n   nervousness       0.00      0.00      0.00         8\n      optimism       0.76      0.48      0.59       119\n         pride       0.00      0.00      0.00         9\n   realization       0.31      0.24      0.27        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.59      0.75      0.66        40\n       sadness       0.59      0.40      0.48        84\n      surprise       0.62      0.32      0.42        95\n       neutral       0.57      0.75      0.65      1592\n\n      accuracy                           0.58      4548\n     macro avg       0.47      0.38      0.39      4548\n  weighted avg       0.56      0.58      0.55      4548\n', 'eval_runtime': 2.9676, 'eval_samples_per_second': 1532.551, 'eval_steps_per_second': 48.187, 'epoch': 2.0}
{'loss': 1.4722, 'grad_norm': 3.5132205486297607, 'learning_rate': 0.0006614219114219114, 'epoch': 3.0}
{'eval_loss': 1.3757469654083252, 'eval_accuracy': 0.5894898856640282, 'eval_f1': 0.3897019975262879, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.63      0.75      0.68       326\n     amusement       0.74      0.77      0.76       208\n         anger       0.35      0.55      0.43       109\n     annoyance       0.48      0.06      0.11       164\n      approval       0.66      0.12      0.20       258\n        caring       0.55      0.18      0.27        96\n     confusion       0.47      0.17      0.25       102\n     curiosity       0.46      0.52      0.49       164\n        desire       0.69      0.56      0.62        52\ndisappointment       0.31      0.04      0.08        91\n   disapproval       0.55      0.13      0.21       212\n       disgust       0.39      0.46      0.42        61\n embarrassment       0.80      0.20      0.32        20\n    excitement       0.58      0.21      0.31        52\n          fear       0.54      0.55      0.55        58\n     gratitude       0.90      0.91      0.90       261\n         grief       0.00      0.00      0.00         6\n           joy       0.59      0.51      0.55       106\n          love       0.64      0.90      0.75       173\n   nervousness       0.00      0.00      0.00         8\n      optimism       0.65      0.51      0.57       119\n         pride       0.00      0.00      0.00         9\n   realization       0.88      0.09      0.17        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.67      0.72      0.70        40\n       sadness       0.67      0.36      0.47        84\n      surprise       0.54      0.39      0.45        95\n       neutral       0.56      0.82      0.67      1592\n\n      accuracy                           0.59      4548\n     macro avg       0.51      0.37      0.39      4548\n  weighted avg       0.59      0.59      0.54      4548\n', 'eval_runtime': 2.9988, 'eval_samples_per_second': 1516.628, 'eval_steps_per_second': 47.686, 'epoch': 3.0}
{'loss': 1.4127, 'grad_norm': 2.9862256050109863, 'learning_rate': 0.0005291375291375291, 'epoch': 4.0}
{'eval_loss': 1.372361421585083, 'eval_accuracy': 0.588830255057168, 'eval_f1': 0.4237465071756023, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.62      0.77      0.69       326\n     amusement       0.77      0.74      0.75       208\n         anger       0.48      0.42      0.45       109\n     annoyance       0.61      0.14      0.23       164\n      approval       0.45      0.27      0.33       258\n        caring       0.72      0.24      0.36        96\n     confusion       0.53      0.21      0.30       102\n     curiosity       0.44      0.66      0.52       164\n        desire       0.63      0.56      0.59        52\ndisappointment       0.50      0.10      0.17        91\n   disapproval       0.35      0.36      0.36       212\n       disgust       0.27      0.67      0.39        61\n embarrassment       0.62      0.40      0.48        20\n    excitement       0.27      0.33      0.30        52\n          fear       0.63      0.50      0.56        58\n     gratitude       0.95      0.90      0.93       261\n         grief       0.00      0.00      0.00         6\n           joy       0.61      0.54      0.57       106\n          love       0.66      0.91      0.77       173\n   nervousness       0.00      0.00      0.00         8\n      optimism       0.63      0.58      0.60       119\n         pride       1.00      0.22      0.36         9\n   realization       1.00      0.01      0.03        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.67      0.45      0.54        40\n       sadness       0.40      0.63      0.49        84\n      surprise       0.48      0.41      0.44        95\n       neutral       0.62      0.72      0.66      1592\n\n      accuracy                           0.59      4548\n     macro avg       0.53      0.42      0.42      4548\n  weighted avg       0.60      0.59      0.57      4548\n', 'eval_runtime': 3.0077, 'eval_samples_per_second': 1512.14, 'eval_steps_per_second': 47.545, 'epoch': 4.0}
{'loss': 1.3566, 'grad_norm': 3.958766460418701, 'learning_rate': 0.0003968531468531469, 'epoch': 5.0}
{'eval_loss': 1.3827520608901978, 'eval_accuracy': 0.5789357959542656, 'eval_f1': 0.38559647383706613, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.45      0.89      0.60       326\n     amusement       0.68      0.84      0.75       208\n         anger       0.38      0.49      0.43       109\n     annoyance       0.43      0.10      0.16       164\n      approval       0.64      0.16      0.26       258\n        caring       0.57      0.29      0.39        96\n     confusion       0.49      0.21      0.29       102\n     curiosity       0.50      0.23      0.32       164\n        desire       0.86      0.46      0.60        52\ndisappointment       0.50      0.03      0.06        91\n   disapproval       0.50      0.12      0.20       212\n       disgust       0.54      0.34      0.42        61\n embarrassment       0.80      0.20      0.32        20\n    excitement       0.47      0.15      0.23        52\n          fear       0.59      0.66      0.62        58\n     gratitude       0.92      0.89      0.91       261\n         grief       0.00      0.00      0.00         6\n           joy       0.72      0.22      0.33       106\n          love       0.73      0.79      0.76       173\n   nervousness       0.00      0.00      0.00         8\n      optimism       0.64      0.56      0.60       119\n         pride       0.00      0.00      0.00         9\n   realization       0.50      0.19      0.27        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.58      0.47      0.52        40\n       sadness       0.51      0.55      0.53        84\n      surprise       0.58      0.56      0.57        95\n       neutral       0.57      0.79      0.66      1592\n\n      accuracy                           0.58      4548\n     macro avg       0.51      0.36      0.39      4548\n  weighted avg       0.58      0.58      0.54      4548\n', 'eval_runtime': 3.0095, 'eval_samples_per_second': 1511.217, 'eval_steps_per_second': 47.516, 'epoch': 5.0}
{'loss': 1.2949, 'grad_norm': 3.293675184249878, 'learning_rate': 0.00026456876456876455, 'epoch': 6.0}
{'eval_loss': 1.3199734687805176, 'eval_accuracy': 0.6040017590149517, 'eval_f1': 0.4451677591418766, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.61      0.83      0.70       326\n     amusement       0.65      0.92      0.76       208\n         anger       0.45      0.41      0.43       109\n     annoyance       0.53      0.13      0.21       164\n      approval       0.58      0.17      0.27       258\n        caring       0.53      0.32      0.40        96\n     confusion       0.41      0.32      0.36       102\n     curiosity       0.42      0.69      0.53       164\n        desire       0.62      0.56      0.59        52\ndisappointment       0.26      0.15      0.19        91\n   disapproval       0.56      0.19      0.29       212\n       disgust       0.53      0.49      0.51        61\n embarrassment       0.53      0.40      0.46        20\n    excitement       0.33      0.33      0.33        52\n          fear       0.79      0.45      0.57        58\n     gratitude       0.96      0.89      0.92       261\n         grief       0.00      0.00      0.00         6\n           joy       0.59      0.58      0.59       106\n          love       0.71      0.90      0.79       173\n   nervousness       0.00      0.00      0.00         8\n      optimism       0.71      0.50      0.59       119\n         pride       1.00      0.22      0.36         9\n   realization       0.62      0.20      0.31        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.61      0.57      0.59        40\n       sadness       0.47      0.61      0.53        84\n      surprise       0.54      0.51      0.52        95\n       neutral       0.61      0.74      0.67      1592\n\n      accuracy                           0.60      4548\n     macro avg       0.52      0.43      0.45      4548\n  weighted avg       0.60      0.60      0.58      4548\n', 'eval_runtime': 3.0141, 'eval_samples_per_second': 1508.886, 'eval_steps_per_second': 47.443, 'epoch': 6.0}
{'loss': 1.2271, 'grad_norm': 3.5119056701660156, 'learning_rate': 0.00013228438228438227, 'epoch': 7.0}
{'eval_loss': 1.275689721107483, 'eval_accuracy': 0.6094986807387863, 'eval_f1': 0.4673462453923377, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.63      0.83      0.72       326\n     amusement       0.70      0.88      0.78       208\n         anger       0.43      0.47      0.45       109\n     annoyance       0.37      0.23      0.28       164\n      approval       0.46      0.26      0.34       258\n        caring       0.57      0.41      0.48        96\n     confusion       0.48      0.35      0.41       102\n     curiosity       0.48      0.38      0.42       164\n        desire       0.58      0.56      0.57        52\ndisappointment       0.37      0.15      0.22        91\n   disapproval       0.49      0.29      0.36       212\n       disgust       0.48      0.48      0.48        61\n embarrassment       0.56      0.45      0.50        20\n    excitement       0.48      0.25      0.33        52\n          fear       0.53      0.74      0.62        58\n     gratitude       0.95      0.90      0.92       261\n         grief       0.00      0.00      0.00         6\n           joy       0.56      0.58      0.57       106\n          love       0.71      0.90      0.79       173\n   nervousness       1.00      0.12      0.22         8\n      optimism       0.59      0.61      0.60       119\n         pride       1.00      0.22      0.36         9\n   realization       0.54      0.20      0.29        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.64      0.70      0.67        40\n       sadness       0.48      0.56      0.52        84\n      surprise       0.46      0.58      0.51        95\n       neutral       0.63      0.72      0.67      1592\n\n      accuracy                           0.61      4548\n     macro avg       0.54      0.46      0.47      4548\n  weighted avg       0.59      0.61      0.59      4548\n', 'eval_runtime': 3.0087, 'eval_samples_per_second': 1511.601, 'eval_steps_per_second': 47.528, 'epoch': 7.0}
{'loss': 1.1304, 'grad_norm': 3.921114683151245, 'learning_rate': 0.0, 'epoch': 8.0}
{'eval_loss': 1.25710928440094, 'eval_accuracy': 0.6121372031662269, 'eval_f1': 0.4689640967069454, 'eval_classification_report': '                precision    recall  f1-score   support\n\n    admiration       0.68      0.80      0.73       326\n     amusement       0.71      0.88      0.79       208\n         anger       0.40      0.48      0.43       109\n     annoyance       0.33      0.18      0.24       164\n      approval       0.49      0.28      0.35       258\n        caring       0.58      0.49      0.53        96\n     confusion       0.47      0.30      0.37       102\n     curiosity       0.49      0.54      0.52       164\n        desire       0.64      0.54      0.58        52\ndisappointment       0.35      0.18      0.23        91\n   disapproval       0.45      0.27      0.34       212\n       disgust       0.46      0.54      0.50        61\n embarrassment       0.53      0.40      0.46        20\n    excitement       0.42      0.35      0.38        52\n          fear       0.68      0.62      0.65        58\n     gratitude       0.91      0.90      0.91       261\n         grief       0.00      0.00      0.00         6\n           joy       0.59      0.50      0.54       106\n          love       0.70      0.90      0.79       173\n   nervousness       0.50      0.12      0.20         8\n      optimism       0.63      0.61      0.62       119\n         pride       1.00      0.22      0.36         9\n   realization       0.52      0.19      0.28        74\n        relief       0.00      0.00      0.00         8\n       remorse       0.62      0.65      0.63        40\n       sadness       0.46      0.57      0.51        84\n      surprise       0.51      0.53      0.52        95\n       neutral       0.63      0.73      0.68      1592\n\n      accuracy                           0.61      4548\n     macro avg       0.53      0.46      0.47      4548\n  weighted avg       0.59      0.61      0.59      4548\n', 'eval_runtime': 3.0116, 'eval_samples_per_second': 1510.179, 'eval_steps_per_second': 47.484, 'epoch': 8.0}
{'train_runtime': 259.8898, 'train_samples_per_second': 1117.643, 'train_steps_per_second': 34.938, 'train_loss': 1.4036684548802312, 'epoch': 8.0}
Saving classifier, encoder, and pooler layers
Gathered layers to save.
Layer weights saved.
Predictions shape:  (4590, 28) 
Labels shape:  (4590, 1) 
Class Predictions:  [25 14 17 ... 27  0 27]
